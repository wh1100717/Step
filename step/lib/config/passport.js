// Generated by CoffeeScript 1.7.1
'use strict';
var LocalStrategy, User, mongoose, passport;

mongoose = require('mongoose');

User = mongoose.model('User');

passport = require('passport');

LocalStrategy = require('passport-local').Strategy;


/*
 * Passport configuration
 */

passport.serializeUser(function(user, done) {
  done(null, user.id);
});

passport.deserializeUser(function(id, done) {
  User.findOne({
    _id: id
  }, '-salt -hashedPassword', function(err, user) {
    done(err, user);
  });
});

passport.use(new LocalStrategy({
  usernameField: 'email',
  passwordField: 'password'
}, function(email, password, done) {
  User.findOne({
    email: email.toLowerCase()
  }, function(err, user) {
    if (err) {
      return done(err);
    }
    if (!user) {
      return done(null, false, {
        message: 'This email is not registered'
      });
    }
    if (!user.authenticate(password)) {
      return done(null, false, {
        message: 'This password is not correct'
      });
    }
    return done(null, user);
  });
}));

module.exports = passport;
